@charset "UTF-8";
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* forcing inherit */ }

html {
  font-size: 62.5%;
  /* just do this wy */ }

body {
  box-sizing: border-box;
  /* border 기준 */ }

body {
  /* font는 usually inherited, body is parent of all*/
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 3rem; }
  .heading-primary--main {
    /* block: width를 다 차지하므로 자동적으로 띄어쓰기가 된다 */
    display: block;
    font-size: 6rem;
    font-weight: 600;
    letter-spacing: 6rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-delay: 0.5s;
    animation-fill-mode: forwards; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 0.8rem;
    /* animation위해 필요한 것 */
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-delay: 0.5s;
    /* 애니메이션 끝나고 상태유지, both는 둘다, backwards는 처음값으로 돌아감 */
    animation-fill-mode: forwards; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  100% {
    opacity: 1;
    transform: translateX(1rem); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  100% {
    opacity: 1;
    transform: translateX(-1rem); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    transform: translateY(0rem); } }

.btn {
  /* :link,visted: a 태그에만 사용가능
    visited: 링크 한번 누르면 보라색으로 되는 것
    */
  /* before, after는 자식으로 들어간다 */ }
  .btn:link, .btn:visited {
    font-size: 1.6rem;
    position: relative;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* https://www.daleseo.com/css-display-inline-block/ */
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s; }
  .btn:hover {
    transform: translateY(-0.5rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* 순서가 .btn::after:hover 여야할거같은데 아냐 */ }
    .btn:hover::after {
      transform: scale(1.2, 1.4);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.25rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    content: '';
    /* display: 부모랑 똑같아야 함 */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--white {
    background-color: #fff;
    color: #000; }
    .btn--white::after {
      background-color: #fff; }
  .btn--animated {
    animation-name: moveInBottom;
    animation-duration: 1s;
    animation-delay: 0.75s;
    animation-fill-mode: backwards;
    /* 거꾸로 돌아가는것, 시작점이 0%라고 이해  */ }

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(205, 46, 59, 0.2), rgba(241, 112, 123, 0.4)), url(../img/hero.jpg);
  background-size: cover;
  /* screen 크기 바뀌어도 항상 top에 위치 */
  background-position: top;
  /* 시계방향으로 자르기 x, y*/
  /* https://bennettfeely.com/clippy/ */
  clip-path: polygon(0 0, 100% 0%, 100% 80%, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 2rem;
    left: 2rem; }
  .header__logo {
    height: 2.5rem; }
  .header__text-box {
    position: absolute;
    /* 중앙에 만드는 coolest trick */
    top: 40%;
    left: 50%;
    /* translate는 parent 기준이 아니라 자기자신을 기준으로 한다 */
    transform: translate(-50%, -50%);
    text-align: center;
    /*! inline-block, text로 처리한다고 하는데... 무슨 소리지? */ }

.grid {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
